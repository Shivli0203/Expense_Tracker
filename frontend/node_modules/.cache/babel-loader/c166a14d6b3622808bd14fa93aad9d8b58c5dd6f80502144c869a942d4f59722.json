{"ast":null,"code":"var _jsxFileName = \"E:\\\\projects\\\\Expense_tracker\\\\New_Expense\\\\expense-tracker_fullstack\\\\frontend\\\\src\\\\context\\\\globalContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\nconst GlobalContext = /*#__PURE__*/React.createContext();\nexport const GlobalProvider = _ref => {\n  _s();\n  let {\n    children\n  } = _ref;\n  const [incomes, setIncomes] = useState([]);\n  const [expenses, setExpenses] = useState([]);\n  const [error, setError] = useState(null);\n  const addIncome = async income => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-income`, income);\n      getIncomes();\n    } catch (err) {\n      if (err.response && err.response.data) {\n        setError(err.response.data.message); // Check if the error response has a message\n      } else {\n        setError(\"An error occurred while adding income.\"); // Fallback error message\n      }\n    }\n  };\n\n  const getIncomes = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-incomes`);\n      setIncomes(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch incomes.\");\n    }\n  };\n  const deleteIncome = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-income/${id}`);\n      getIncomes();\n    } catch (err) {\n      setError(\"Failed to delete income.\");\n    }\n  };\n  const totalIncome = () => {\n    return incomes.reduce((total, income) => total + income.amount, 0);\n  };\n  const addExpense = async expense => {\n    try {\n      const response = await axios.post(`${BASE_URL}add-expense`, expense);\n      getExpenses();\n    } catch (err) {\n      if (err.response && err.response.data) {\n        setError(err.response.data.message);\n      } else {\n        setError(\"An error occurred while adding expense.\");\n      }\n    }\n  };\n  const getExpenses = async () => {\n    try {\n      const response = await axios.get(`${BASE_URL}get-expenses`);\n      setExpenses(response.data);\n    } catch (err) {\n      setError(\"Failed to fetch expenses.\");\n    }\n  };\n  const deleteExpense = async id => {\n    try {\n      await axios.delete(`${BASE_URL}delete-expense/${id}`);\n      getExpenses();\n    } catch (err) {\n      setError(\"Failed to delete expense.\");\n    }\n  };\n  const totalExpenses = () => {\n    return expenses.reduce((total, expense) => total + expense.amount, 0);\n  };\n  const totalBalance = () => {\n    return totalIncome() - totalExpenses();\n  };\n  const transactionHistory = () => {\n    const history = [...incomes, ...expenses];\n    history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\n    return history.slice(0, 3);\n  };\n  return /*#__PURE__*/_jsxDEV(GlobalContext.Provider, {\n    value: {\n      addIncome,\n      getIncomes,\n      incomes,\n      deleteIncome,\n      expenses,\n      totalIncome,\n      addExpense,\n      getExpenses,\n      deleteExpense,\n      totalExpenses,\n      totalBalance,\n      transactionHistory,\n      error,\n      setError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n_s(GlobalProvider, \"tEtYkz3TSUkMCKA3FBENwBvPpJ4=\");\n_c = GlobalProvider;\nexport const useGlobalContext = () => {\n  _s2();\n  return useContext(GlobalContext);\n};\n_s2(useGlobalContext, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"GlobalProvider\");","map":{"version":3,"names":["React","useContext","useState","axios","BASE_URL","GlobalContext","createContext","GlobalProvider","children","incomes","setIncomes","expenses","setExpenses","error","setError","addIncome","income","response","post","getIncomes","err","data","message","get","deleteIncome","id","delete","totalIncome","reduce","total","amount","addExpense","expense","getExpenses","deleteExpense","totalExpenses","totalBalance","transactionHistory","history","sort","a","b","Date","createdAt","slice","useGlobalContext"],"sources":["E:/projects/Expense_tracker/New_Expense/expense-tracker_fullstack/frontend/src/context/globalContext.js"],"sourcesContent":["import React, { useContext, useState } from \"react\";\r\nimport axios from 'axios';\r\n\r\nconst BASE_URL = \"http://localhost:5000/api/v1/\";\r\n\r\nconst GlobalContext = React.createContext();\r\n\r\nexport const GlobalProvider = ({children}) => {\r\n\r\n    const [incomes, setIncomes] = useState([]);\r\n    const [expenses, setExpenses] = useState([]);\r\n    const [error, setError] = useState(null);\r\n\r\n    const addIncome = async (income) => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}add-income`, income);\r\n            getIncomes();\r\n        } catch (err) {\r\n            if (err.response && err.response.data) {\r\n                setError(err.response.data.message); // Check if the error response has a message\r\n            } else {\r\n                setError(\"An error occurred while adding income.\"); // Fallback error message\r\n            }\r\n        }\r\n    };\r\n\r\n    const getIncomes = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-incomes`);\r\n            setIncomes(response.data);\r\n        } catch (err) {\r\n            setError(\"Failed to fetch incomes.\");\r\n        }\r\n    };\r\n\r\n    const deleteIncome = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-income/${id}`);\r\n            getIncomes();\r\n        } catch (err) {\r\n            setError(\"Failed to delete income.\");\r\n        }\r\n    };\r\n\r\n    const totalIncome = () => {\r\n        return incomes.reduce((total, income) => total + income.amount, 0);\r\n    };\r\n\r\n    const addExpense = async (expense) => {\r\n        try {\r\n            const response = await axios.post(`${BASE_URL}add-expense`, expense);\r\n            getExpenses();\r\n        } catch (err) {\r\n            if (err.response && err.response.data) {\r\n                setError(err.response.data.message);\r\n            } else {\r\n                setError(\"An error occurred while adding expense.\");\r\n            }\r\n        }\r\n    };\r\n\r\n    const getExpenses = async () => {\r\n        try {\r\n            const response = await axios.get(`${BASE_URL}get-expenses`);\r\n            setExpenses(response.data);\r\n        } catch (err) {\r\n            setError(\"Failed to fetch expenses.\");\r\n        }\r\n    };\r\n\r\n    const deleteExpense = async (id) => {\r\n        try {\r\n            await axios.delete(`${BASE_URL}delete-expense/${id}`);\r\n            getExpenses();\r\n        } catch (err) {\r\n            setError(\"Failed to delete expense.\");\r\n        }\r\n    };\r\n\r\n    const totalExpenses = () => {\r\n        return expenses.reduce((total, expense) => total + expense.amount, 0);\r\n    };\r\n\r\n    const totalBalance = () => {\r\n        return totalIncome() - totalExpenses();\r\n    };\r\n\r\n    const transactionHistory = () => {\r\n        const history = [...incomes, ...expenses];\r\n        history.sort((a, b) => new Date(b.createdAt) - new Date(a.createdAt));\r\n        return history.slice(0, 3);\r\n    };\r\n\r\n    return (\r\n        <GlobalContext.Provider value={{\r\n            addIncome,\r\n            getIncomes,\r\n            incomes,\r\n            deleteIncome,\r\n            expenses,\r\n            totalIncome,\r\n            addExpense,\r\n            getExpenses,\r\n            deleteExpense,\r\n            totalExpenses,\r\n            totalBalance,\r\n            transactionHistory,\r\n            error,\r\n            setError\r\n        }}>\r\n            {children}\r\n        </GlobalContext.Provider>\r\n    );\r\n};\r\n\r\nexport const useGlobalContext = () => {\r\n    return useContext(GlobalContext);\r\n};\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}